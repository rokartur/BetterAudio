name: Stable build

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Swift
        uses: fwal/setup-swift@v2
        with:
          swift-version: '6.1'

      - name: Install CocoaPods
        run: |
          brew install cocoapods || true

      - name: Build with Xcode
        run: |
          set -euo pipefail

          PROJECT="Micmute.xcodeproj"
          SCHEME="Micmute"
          CONFIG="Release"

          build_variant() {
            local identifier="$1"
            shift

            rm -rf "build_output/${identifier}"
            xcodebuild clean build \
              -project "$PROJECT" \
              -scheme "$SCHEME" \
              -configuration "$CONFIG" \
              -derivedDataPath "build_output/${identifier}" \
              CODE_SIGN_IDENTITY="" \
              CODE_SIGNING_REQUIRED=NO \
              CODE_SIGNING_ALLOWED=NO \
              CODE_SIGN_ENTITLEMENTS="" \
              "$@"
          }

          build_variant arm64 -arch arm64
          build_variant x86_64 -arch x86_64
          build_variant universal -arch arm64 -arch x86_64

      - name: Prepare release bundle
        run: |
          set -euo pipefail

          RELEASE_DIR="build_output/Bundle"
          mkdir -p "$RELEASE_DIR/Micmute"

          ditto build_output/arm64/Build/Products/Release/Micmute.app "$RELEASE_DIR/Micmute/Micmute-arm64.app"
          ditto build_output/x86_64/Build/Products/Release/Micmute.app "$RELEASE_DIR/Micmute/Micmute-intel.app"
          ditto build_output/universal/Build/Products/Release/Micmute.app "$RELEASE_DIR/Micmute/Micmute-universal.app"

          pushd "$RELEASE_DIR" >/dev/null
          ditto -c -k --sequesterRsrc --keepParent Micmute Micmute.zip
          popd >/dev/null

          mv "$RELEASE_DIR/Micmute.zip" "$GITHUB_WORKSPACE/Micmute.zip"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Micmute
          path: ${{ github.workspace }}/Micmute.zip

  release:
    needs: build
    runs-on: macos-15
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: Micmute
          path: .

      - name: Read app version from Xcode settings
        id: appver
        run: |
          VERSION=$(xcodebuild -project Micmute.xcodeproj -scheme Micmute -showBuildSettings | awk -F= '/MARKETING_VERSION/ {gsub(/ /,"",$2); print $2; exit}')
          if [ -z "$VERSION" ]; then
            echo "MARKETING_VERSION not found. Ensure it's set in target Build Settings." >&2
            exit 1
          fi
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Create tag if missing
        run: |
          TAG="v${{ steps.appver.outputs.version }}"
          if git rev-parse -q --verify "refs/tags/$TAG" >/dev/null; then
            echo "Tag $TAG already exists"
          else
            git config user.name "github-actions"
            git config user.email "github-actions@users.noreply.github.com"
            git tag "$TAG"
            git push origin "$TAG"
          fi

      - name: Rename artifact
        run: |
          mv Micmute.zip Micmute-${{ steps.appver.outputs.version }}.zip

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.appver.outputs.version }}
          name: ${{ steps.appver.outputs.version }}
          files: Micmute-${{ steps.appver.outputs.version }}.zip
          make_latest: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
